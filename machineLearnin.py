import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score


data = pd.read_csv('MalwareDetection.csv')


X = data[['hash', 'size_of_data', 'entropy']]  
y = data['malware']  

# Encoding categorical variable 'hash'
label_encoder = LabelEncoder()
X.loc[:, 'hash'] = label_encoder.fit_transform(X['hash'])


# Ensure 'entropy' and 'size_of_data' columns are numeric, if not already
data['entropy'] = pd.to_numeric(data['entropy'], errors='coerce')
data['size_of_data'] = pd.to_numeric(data['size_of_data'], errors='coerce')

# Handle any missing values in the dataset
data = data.dropna()

# Split data into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize and train a Gaussian Naive Bayes model
model = GaussianNB()
model.fit(X_train, y_train)
# Predictions
y_pred = model.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

import joblib
joblib.dump(model, 'naive_bayes_model')
